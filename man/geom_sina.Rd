% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-sina.r
\name{geom_sina}
\alias{geom_sina}
\title{Sina plot}
\usage{
geom_sina(mapping = NULL, data = NULL, stat = "identity",
  position = "sina", ..., binwidth = 0.02, scale = TRUE,
  neighbour_limit = 1, method = NULL, adjust = 1, show.legend = NA,
  inherit.aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{aes}} or
\code{\link{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
   options:

   If \code{NULL}, the default, the data is inherited from the plot
   data as specified in the call to \code{\link{ggplot}}.

   A \code{data.frame}, or other object, will override the plot
   data. All objects will be fortified to produce a data frame. See
   \code{\link{fortify}} for which variables will be created.

   A \code{function} will be called with a single argument,
   the plot data. The return value must be a \code{data.frame.}, and
   will be used as the layer data.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{other arguments passed on to \code{\link{layer}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{color = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{binwidth}{Binning factor. The range of the values in \code{aes(y)}
are binned in windows of length \code{(max(y) - min(y)) * y_fraction}.
Samples within the same bin belong to the same "neighbourhood".}

\item{scale}{logical. When set to \code{TRUE} x-coordinate widths across all
groups are scaled based on the densiest are in the plot. Default: \code{TRUE}}

\item{neighbour_limit}{if the samples within the same y-axis bin are more
than neighbour_limit, the samples's X coordinates will be adjusted.}

\item{method}{choose the method to spread the samples within the same
neighbourhood along the x-axis. Available methods: "density",
"neighbourhood" (can be abbreciated, e.g. "d"). See \code{Details}.}

\item{adjust}{adjusts the bandwidth of the density kernel when
\code{method == "density"} (see \code{\link[stats]{density}}) or the spread
of the samples within the same group along the x-axis.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}
}
\description{
The sina plot is a data visualization chart suitable for plotting any single
variable in a multiclass dataset. It is an enhanced jitter strip chart,
where the width of the jitter is controlled by the density distribution of
the data within each class.
}
\details{
There are two available ways to define the x-axis borders for the
samples to spread within:
\itemize{
 \item{\code{method == "density"}

  A density kernel is estimated along the y-axis for every sample group. The
  borders are then defined by the density curve. Tuning parameter
  \code{adjust} can be used to control the density bandwidth in the same way
  it is used in \code{\link[stats]{density}}. }
 \item{\code{method == "neighbourhood"}:

 The borders are defined by the number of samples that 'live' in the same
 neighbourhood and the parameter \code{adjust} in the following fashion:

 \code{x_border = nsamples * adjust}

  }
}
}
\section{Aesthetics}{

\Sexpr[results=rd,stage=build]{ggplot2:::rd_aesthetics("geom", "point")}
}
\examples{
ggplot(midwest, aes(state, area)) + geom_point()

# Boxplot and Violin plots convey information on the distribution but not the
# number of samples, while Jitter does the opposite.
ggplot(midwest, aes(state, area)) + geom_violin()
ggplot(midwest, aes(state, area)) + geom_jitter()

# Sina does both!
ggplot(midwest, aes(state, area)) + geom_violin() + geom_sina()

p <- ggplot(midwest, aes(state, popdensity)) + scale_y_log10()
p + geom_sina()

# Colour the points based on the data set's columns
p + geom_sina(aes(colour = inmetro))

# Or any other way
cols <- midwest$popdensity > 10000
p + geom_sina(colour = cols + 1L)

# Sina plots with continuous x:
p <- ggplot(midwest, aes(cut_width(area, 0.02), popdensity)) + scale_y_log10()
p + geom_sina()

# By default, Sina plot scales the width of the class according to the width
# of the class with the highest density. Turn group-wise scaling off with:
p + geom_sina(scale = FALSE)

###Sample gaussian distributions
# Unimodal
a <- rnorm(500, 6, 1)
b <- rnorm(400, 5, 1.5)

# Bimodal
c <- c(rnorm(200, 3, .7), rnorm(50, 7, 0.4))

# Trimodal
d <- c(rnorm(200, 2, 0.7), rnorm(300, 5.5, 0.4), rnorm(100, 8, 0.4))

df <- data.frame(
  "Distribution" = c(rep("Unimodal 1", length(a)),
                     rep("Unimodal 2", length(b)),
                     rep("Bimodal", length(c)),
                     rep("Trimodal", length(d))),
  "Value" = c(a, b, c, d))

# Reorder levels
df$Distribution <- factor(df$Distribution,
                          levels(df$Distribution)[c(3, 4, 1, 2)])

p <- ggplot(df, aes(Distribution, Value))
p + geom_boxplot()
p + geom_violin() + geom_sina()
}
\references{
Sidiropoulos, N., Sohi, S. H., Rapin, N. and Bagger, F.O. (2015)
SinaPlot: an enhanced chart for simple and truthful representation of single
observations over multiple classes.
bioRxiv doi: \url{http://dx.doi.org/10.1101/028191}
}
\seealso{
\code{\link{geom_point}} for regular, unjittered points,

 \code{\link{geom_boxplot}} and \code{\link{geom_violin}} for other ways of
 looking at the conditional distribution of a variable.
}

